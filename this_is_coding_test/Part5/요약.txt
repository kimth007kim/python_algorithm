
DFS와 BFS를 구현하려면 재귀함수도 이해해야한다.
재귀함수: 자기자신을 호출하는 함수
재귀함수가 언제 끝날지 종료 조건을 꼭 명시해야한다.자칫 명시하지않으면 무한호출
초반의 if문이 종료 조건 역할 수행

DFS: 깊이 우선 탐색 깊은 부분을 우선적으로 탐색하는 알고리즘

인접행렬: 2차원배열로 그래프의 연결관계를 표현하는 방식
인접 리스트: 리스트로 그래프의 연결관계를 표현하는 방식
인접행렬 :연결되어있지 않은 노드끼리는 무한의 비용이라고 작성 정답이 될수없는 큰값인 99999999나, 987654321등의 값으로 초기화 하는경우가 많다.
이렇게 그래프를 인접 행렬 방식으로 처리할때는 다음과 같이 데이터를 초기화


인접리스트는 연결리스트 라는 자료 구조를 이용해 구현하는데 , C++ 이나 자바 프로그래밍에서는 별도로 연결리스트기능을 구현하기 위한 표준 라이브러리를 제공
파이썬은 기본 자료형인 리스트 자료형이 append()와 메소드를 제공하므로 , 전통적인 프로그래밍 언어에서의 배열과 연결리스트의 기능을 모두 기본으로 제공한다.
파이썬에서 인접리스트를 이용해 그래프를 표현하고자 할때에도 단순히 2차원 리스트를 사용하면된다.

두개를 비교해보자 메모리측면 ,속도측면

인접행렬 메모리 낭비큼 (정보얻는)속도 빠름
인접리스트 메모리 낭비적음  (정보얻는)속도 느림

특정한 노드와 연결된 모든 인접 노드를 순회해야하는 경우 인접 리스트 방식이 인접 행렬방식에 비해 메모리 공간 낭비가 적다.
